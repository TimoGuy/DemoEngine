//
// https://github.com/PacktPublishing/3D-Graphics-Rendering-Cookbook/blob/master/data/shaders/chapter08/GL03_Adaptation.comp
//

#version 450 core

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout(r16f, binding = 0) uniform readonly  image2D imgLuminancePrev;
layout(r16f, binding = 1) uniform readonly  image2D imgLuminanceCurr;
layout(r16f, binding = 2) uniform writeonly image2D imgLuminanceAdapted;

uniform vec2 adaptationSpeed;


void main()
{
	float lumPrev = imageLoad(imgLuminancePrev, ivec2(0, 0)).x;
	float lumCurr = imageLoad(imgLuminanceCurr, ivec2(0, 0)).x;

	float adaptationSpeedChosen = (lumPrev > lumCurr) ? adaptationSpeed.x : adaptationSpeed.y;
	float newAdaptation = lumPrev + (lumCurr - lumPrev) * (1.0 - pow(0.98, 30.0 * adaptationSpeedChosen));

	imageStore(imgLuminanceAdapted, ivec2(0, 0), vec4(vec3(newAdaptation), 1.0));
}
